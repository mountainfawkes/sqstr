// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sqstr.Models;

namespace sqstr.Solution.Migrations
{
    [DbContext(typeof(SqstrContext))]
    partial class SqstrContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("sqstr.Models.Attributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("Carbon_G")
                        .HasColumnType("bigint");

                    b.Property<double>("Carbon_Kg")
                        .HasColumnType("float");

                    b.Property<double>("Carbon_Lb")
                        .HasColumnType("float");

                    b.Property<double>("Carbon_Mt")
                        .HasColumnType("float");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distance_Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Distance_Value")
                        .HasColumnType("float");

                    b.Property<string>("Electricity_Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Electricity_Value")
                        .HasColumnType("float");

                    b.Property<DateTime>("Estimated_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fuel_Source_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fuel_Source_Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fuel_Source_Value")
                        .HasColumnType("float");

                    b.Property<int>("Passengers")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transport_Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vehicle_Year")
                        .HasColumnType("int");

                    b.Property<string>("Weight_Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight_Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("sqstr.Models.Data", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AttributesId")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DataId");

                    b.HasIndex("AttributesId");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("sqstr.Models.Leg", b =>
                {
                    b.Property<int>("LegsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AttributesId")
                        .HasColumnType("int");

                    b.Property<string>("Departure_Airport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination_Airport")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LegsId");

                    b.HasIndex("AttributesId");

                    b.ToTable("Legs");
                });

            modelBuilder.Entity("sqstr.Models.Price", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LatestPrice")
                        .HasColumnType("float");

                    b.Property<string>("PriceDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PriceId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("sqstr.Models.Root", b =>
                {
                    b.Property<int>("RootId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DataId")
                        .HasColumnType("int");

                    b.Property<string>("High")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("High_Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Price_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Price_Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RootId");

                    b.HasIndex("DataId");

                    b.ToTable("Roots");
                });

            modelBuilder.Entity("sqstr.Models.Data", b =>
                {
                    b.HasOne("sqstr.Models.Attributes", "Attributes")
                        .WithMany()
                        .HasForeignKey("AttributesId");

                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("sqstr.Models.Leg", b =>
                {
                    b.HasOne("sqstr.Models.Attributes", null)
                        .WithMany("Legs")
                        .HasForeignKey("AttributesId");
                });

            modelBuilder.Entity("sqstr.Models.Root", b =>
                {
                    b.HasOne("sqstr.Models.Data", "Data")
                        .WithMany()
                        .HasForeignKey("DataId");

                    b.Navigation("Data");
                });

            modelBuilder.Entity("sqstr.Models.Attributes", b =>
                {
                    b.Navigation("Legs");
                });
#pragma warning restore 612, 618
        }
    }
}
